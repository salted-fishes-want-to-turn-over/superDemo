<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EmployeeMapper">


    <select id="getEmployeeByDept" parameterType="String" resultType="com.example.entity.VO.EmployeeVO">
        -- 联表查询部门下的所有员工
				select em.employee_name, em.employee_phone, em.employee_address, de.dept_name from employee em
				left join dept de
				on em.dept_id=de.dept_no
				where de.dept_name=#{deptName}
    </select>

	<select id="getEmployeeByPage" resultType="com.example.entity.Employee">
		-- 分页查询相同地址员工表员工
		select
		*
		from employee as em
		<where>
			<if test="employee != null and employee.employeeId != null">
				em.employee_id = #{employee.employeeId}
			</if>
			<if test="employee != null and employee.employeeAddress != null">
				em.employee_address = #{employee.employeeAddress}
			</if>
		</where>
		ORDER BY em.employee_id asc
	</select>

	<select id="queryAllExportData"  resultType="com.example.entity.VO.EmployeeDeptVO">
		select em.employee_id, em.employee_name, em.employee_phone, em.employee_address, em.dept_id, de.dept_name, de.dept_dbsource from employee em
		left join dept de
		on em.dept_id=de.dept_no
		<where>
			<if test="EmployeeDeptDTO.employeeId != null">
				AND em.employee_id = #{EmployeeDeptDTO.employeeId}
			</if>
			<if test="EmployeeDeptDTO.employeeName != null and EmployeeDeptDTO.employeeName != ''">
				AND INSTR(em.employee_name,#{EmployeeDeptDTO.employeeName})
			</if>
			<if test="EmployeeDeptDTO.employeePhone != null and EmployeeDeptDTO.employeePhone != ''">
				AND INSTR(em.employee_phone,#{EmployeeDeptDTO.employeePhone})
			</if>
			<if test="EmployeeDeptDTO.employeeAddress != null and EmployeeDeptDTO.employeeAddress != ''">
				AND INSTR(em.employee_address,#{EmployeeDeptDTO.employeeAddress})
			</if>
			<if test="EmployeeDeptDTO.deptName != null and EmployeeDeptDTO.deptName != ''">
				AND INSTR(em.dept_name,#{EmployeeDeptDTO.deptName})
			</if>
		</where>
    </select>

	<insert id="insertBatch" useGeneratedKeys="true" keyProperty="employeeId"
			parameterType="com.example.entity.ExcelImport.EmployeeImport">
		insert into employee
		(employee_name, employee_phone, employee_address, dept_id)
		values
		<foreach collection="list" item="item" separator=",">
			(
			#{item.employeeName}, #{item.employeePhone}, #{item.employeeAddress}, #{item.deptId}
			)

		</foreach>
	</insert>
</mapper>
